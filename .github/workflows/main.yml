name: Publish Helm Charts to ECR

on:
  push:
    branches: ['main', 'stage', 'dev']  # Define os branches que você deseja capturar
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  push-helm-charts:
    runs-on: ubuntu-latest
    env:
        URI_ECR: "${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com"

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-oicd
            aws-region: ${{ vars.AWS_REGION }}

        - name: Login to Amazon ECR
          uses: aws-actions/amazon-ecr-login@v2        

        - name: Ensure ECR Repository Exists
          run: |
            for app in $(ls -d */); do
                if [ -f "$app/Chart.yaml" ]; then
                    REPO_NAME="org-sam/${app%/}/${{ github.ref_name }}"  # Customiza o nome do repositório
                    aws ecr describe-repositories --repository-names "$REPO_NAME" > /dev/null || \
                    aws ecr create-repository --repository-name "$REPO_NAME"
                fi
            done

        - name: Empacotar e Enviar Charts
          run: |
            for app in $(ls -d */); do
                if [ -f "$app/Chart.yaml" ]; then
                    helm package $app --destination .
                    REPO_NAME="org-sam/${app%/}/${{ github.ref_name }}"  # Usa o nome customizado do repositório
                    helm push ${app%/}-*.tgz oci://${{ env.URI_ECR }}/$REPO_NAME
                fi
            done
